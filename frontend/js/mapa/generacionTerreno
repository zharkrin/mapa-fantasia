// ===============================
// Generación de Terreno con Ruido Perlin
// ===============================

// --- Implementación básica de Perlin Noise 2D ---
class Perlin {
  constructor() {
    this.gradientes = {};
    this.memory = {};
  }

  // Producto punto entre vectores
  dotGridGradient(ix, iy, x, y) {
    const key = ix + "," + iy;
    let grad;
    if (this.gradientes[key]) {
      grad = this.gradientes[key];
    } else {
      const theta = Math.random() * 2 * Math.PI;
      grad = { x: Math.cos(theta), y: Math.sin(theta) };
      this.gradientes[key] = grad;
    }

    const dx = x - ix;
    const dy = y - iy;
    return dx * grad.x + dy * grad.y;
  }

  // Función de interpolación suave
  fade(t) {
    return t * t * t * (t * (t * 6 - 15) + 10);
  }

  // Interpolación lineal
  lerp(a, b, t) {
    return a + t * (b - a);
  }

  // Devuelve valor entre -1 y 1
  get(x, y) {
    if (this.memory.hasOwnProperty([x, y])) return this.memory[[x, y]];
    const x0 = Math.floor(x);
    const x1 = x0 + 1;
    const y0 = Math.floor(y);
    const y1 = y0 + 1;

    const sx = this.fade(x - x0);
    const sy = this.fade(y - y0);

    const n0 = this.dotGridGradient(x0, y0, x, y);
    const n1 = this.dotGridGradient(x1, y0, x, y);
    const ix0 = this.lerp(n0, n1, sx);

    const n2 = this.dotGridGradient(x0, y1, x, y);
    const n3 = this.dotGridGradient(x1, y1, x, y);
    const ix1 = this.lerp(n2, n3, sx);

    const value = this.lerp(ix0, ix1, sy);
    this.memory[[x, y]] = value;
    return value;
  }
}

// --- Generador de mapas ---
export const GeneracionTerreno = {
  generarMapa(ancho, alto, escala, semilla) {
    const perlin = new Perlin();
    const mapa = [];

    // Semilla básica (usamos Math.random con offset)
    Math.seedrandom(semilla);

    for (let y = 0; y < alto; y++) {
      const fila = [];
      for (let x = 0; x < ancho; x++) {
        const nx = x / escala;
        const ny = y / escala;
        const valor = (perlin.get(nx, ny) + 1) / 2; // normalizado 0-1
        fila.push(valor);
      }
      mapa.push(fila);
    }

    return mapa;
  },
};